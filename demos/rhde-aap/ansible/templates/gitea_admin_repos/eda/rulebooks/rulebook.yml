---
{% raw %}
- name: Listen for events on a webhook
  hosts: all

  sources:
    - ansible.eda.webhook:
        host: 0.0.0.0
        port: "{% endraw %}{{ eda_webhook_port | default('5000') }}{% raw %}"

  rules:
    - name: Single device Config Change
      condition: "event.payload.inventory is defined and event.payload.user is defined and event.payload.running_env is defined"
      action:
        run_job_template:
          name: Copy config files
          organization: "{{ event.payload.user }} Organization"
          job_args:
            limit: "{{ event.payload.inventory }}"
            extra_vars:
              git_repo_url: {% endraw %}"http://{{ gitea_ip | default(ansible_host) }}:{{ gitea_port | default('3000') }}/{% raw %}{{ event.payload.user | capitalize }}/rhde"
              git_user:  "{{ event.payload.user }}"
              path_prefix: "rhde_config"
              env: "{{ event.payload.running_env }}"
              path: "os"
              

    - name: Prod Config Change
      condition: "event.payload.commits[0].modified is search('prod/rhde_config/os/',ignorecase=true)  or event.payload.commits[0].added is search('prod/rhde_config/os/',ignorecase=true)"
      action:
        run_job_template:
          name: Copy config files
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              git_repo_url: {% endraw %}"http://{{ gitea_ip | default(ansible_host) }}:{{ gitea_port | default('3000') }}/{% raw %}{{ event.payload.repository.owner.login | capitalize }}/rhde"
              git_user: "{{ event.payload.repository.owner.login | capitalize }}"
              path_prefix: "rhde_config"
              env: "prod"
              path: "os"

    - name: Test Config Change
      condition: "event.payload.commits[0].modified is search('test/rhde_config/os/',ignorecase=true)  or event.payload.commits[0].added is search('test/rhde_config/os/',ignorecase=true)"
      action:
        run_job_template:
          name: Copy config files
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              git_repo_url: {% endraw %}"http://{{ gitea_ip | default(ansible_host) }}:{{ gitea_port | default('3000') }}/{% raw %}{{ event.payload.repository.owner.login | capitalize }}/rhde"
              git_user: "{{ event.payload.repository.owner.login | capitalize }}"
              path_prefix: "rhde_config"
              env: "test"
              path: "os"


    - name: New prod Edge Device Image
      condition: "'prod/rhde_image/production-image-definition.yml' in event.payload.commits[0].modified"
      action:
        run_workflow_template:
          name: New Edge Device Image
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "prod/rhde_image"
              image_definition_file: "production-image-definition.yml"
              simplified_installer_definition_file: "production-fdo-definition.yml"
              image_deploy_file: "production-deploy_version.yml"
              builder_blueprint_name: "production-{{ event.payload.repository.owner.login }}"
              image_environment: "prod"
              kickstart_name: "production-kickstart.ks"
              butane_name: "production-ignition.bu"


    - name: New prod Edge Device Simplified Installer
      condition: "'prod/rhde_image/production-fdo-definition.yml' in event.payload.commits[0].modified"
      action:
        run_job_template:
          name: Compose Simplified Installer
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "prod/rhde_image"
              simplified_installer_definition_file: "production-fdo-definition.yml"
              image_deploy_file: "production-deploy_version.yml"
              builder_blueprint_name: "production-{{ event.payload.repository.owner.login }}"
              image_environment: "prod"


    - name: New test Edge Device Image
      condition: "'test/rhde_image/test-image-definition.yml' in event.payload.commits[0].modified"
      action:
        run_workflow_template:
          name: New Edge Device Image
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "test/rhde_image"
              image_definition_file: "test-image-definition.yml"
              simplified_installer_definition_file: "test-fdo-definition.yml"
              image_deploy_file: "test-deploy_version.yml"
              builder_blueprint_name: "test-{{ event.payload.repository.owner.login }}"
              image_environment: "test"
              kickstart_name: "test-kickstart.ks"
              butane_name: "test-ignition.bu"

    - name: New test Edge Device Simplified Installer
      condition: "'test/rhde_image/test-fdo-definition.yml' in event.payload.commits[0].modified"
      action:
        run_job_template:
          name: Compose Simplified Installer
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "test/rhde_image"
              simplified_installer_definition_file: "test-fdo-definition.yml"
              image_deploy_file: "test-deploy_version.yml"
              builder_blueprint_name: "test-{{ event.payload.repository.owner.login }}"
              image_environment: "test"

    - name: Publish new production device image
      condition: "('prod/rhde_image/production-deploy_version.yml' in event.payload.commits[0].modified ) and 'prod/rhde_image/production-image-definition.yml' not in event.payload.commits[0].modified"
      action:
        run_job_template:
          name: Publish Image
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "prod/rhde_image"
              image_definition_file: "production-image-definition.yml"
              image_deploy_file: "production-deploy_version.yml"
              builder_blueprint_name: "production-{{ event.payload.repository.owner.login }}"
              image_environment: "prod"


    - name: Publish new production kickstart
      condition: "('prod/rhde_image/production-kickstart.ks' in event.payload.commits[0].modified) and 'prod/rhde_image/production-image-definition.yml' not in event.payload.commits[0].modified"
      action:
        run_job_template:
          name: Publish Kickstart
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "prod/rhde_image"
              image_environment: "prod"
              kickstart_name: "production-kickstart.ks"

    - name: Publish new production ignition
      condition: "('prod/rhde_image/production-ignition.bu' in event.payload.commits[0].modified) and 'prod/rhde_image/production-image-definition.yml' not in event.payload.commits[0].modified"
      action:
        run_job_template:
          name: Publish Ignition
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "prod/rhde_image"
              image_environment: "prod"
              butane_name: "prod-ignition.bu"



    - name: Publish new test device image
      condition: "('test/rhde_image/test-deploy_version.yml' in event.payload.commits[0].modified) and 'test/rhde_image/test-image-definition.yml' not in event.payload.commits[0].modified"
      action:
        run_job_template:
          name: Publish Image
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "test/rhde_image"
              image_definition_file: "test-image-definition.yml"
              image_deploy_file: "test-deploy_version.yml"
              builder_blueprint_name: "test-{{ event.payload.repository.owner.login }}"
              image_environment: "test"

    - name: Publish new test kickstart
      condition: "('test/rhde_image/test-kickstart.ks' in event.payload.commits[0].modified) and 'test/rhde_image/test-image-definition.yml' not in event.payload.commits[0].modified"
      action:
        run_job_template:
          name: Publish Kickstart
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "test/rhde_image"
              image_environment: "test"
              kickstart_name: "test-kickstart.ks"


    - name: Publish new test ignition
      condition: "('test/rhde_image/test-ignition.bu' in event.payload.commits[0].modified) and 'test/rhde_image/test-image-definition.yml' not in event.payload.commits[0].modified"
      action:
        run_job_template:
          name: Publish Ignition
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              images_repo: "rhde"
              files_path: "test/rhde_image"
              image_environment: "test"
              butane_name: "test-ignition.bu"


    - name: Initial provisioning
      condition: event.payload.ip_address is defined and event.payload.nodename is defined and event.payload.user is defined
      action:
        run_workflow_template:
          name: Provision Edge Device
          organization: "{{ event.payload.user }} Organization"
          job_args:
            extra_vars:
              user: "{{ event.payload.user }}"
              ip_address: "{{ event.payload.ip_address }}"
              nodename: "{{ event.payload.nodename | string }}"
              env: "{{ event.payload.env }}"




    - name: Prod APP Change - Microshift Manifest
      condition: "event.payload.commits[0].modified is search('prod/rhde_config/apps/microshift/manifest/',ignorecase=true)  or event.payload.commits[0].added is search('prod/rhde_config/apps/microshift/manifest/',ignorecase=true)"
      action:
        run_job_template:
          name: Microshift APPs Deploy - Manifest
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              git_repo_url: {% endraw %}"http://{{ gitea_ip | default(ansible_host) }}:{{ gitea_port | default('3000') }}/{% raw %}{{ event.payload.repository.owner.login | capitalize }}/rhde"
              git_user: "{{ event.payload.repository.owner.login | capitalize }}"
              path_prefix: "rhde_config"
              env: "prod"
              path: "apps/microshift/manifest"

    - name: Prod APP Change - Podman Quadlet
      condition: "event.payload.commits[0].modified is search('prod/rhde_config/apps/podman/',ignorecase=true)  or event.payload.commits[0].added is search('prod/rhde_config/apps/podman/',ignorecase=true)"
      action:
        run_job_template:
          name: Podman Quadlet APPs Deploy
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              git_repo_url: {% endraw %}"http://{{ gitea_ip | default(ansible_host) }}:{{ gitea_port | default('3000') }}/{% raw %}{{ event.payload.repository.owner.login | capitalize }}/rhde"
              git_user: "{{ event.payload.repository.owner.login | capitalize }}"
              path_prefix: "rhde_config"
              env: "prod"
              path: "apps/podman/quadlet"

    - name: Test APP Change - Microshift Manifest
      condition: "event.payload.commits[0].modified is search('test/rhde_config/apps/microshift/manifest/',ignorecase=true)  or event.payload.commits[0].added is search('test/rhde_config/apps/microshift/manifest/',ignorecase=true)"
      action:
        run_job_template:
          name: Microshift APPs Deploy - Manifest
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              git_repo_url: {% endraw %}"http://{{ gitea_ip | default(ansible_host) }}:{{ gitea_port | default('3000') }}/{% raw %}{{ event.payload.repository.owner.login | capitalize }}/rhde"
              git_user: "{{ event.payload.repository.owner.login | capitalize }}"
              path_prefix: "rhde_config"
              env: "test"
              path: "apps/microshift/manifest"


    - name: Test APP Change - Podman Quadlet
      condition: "event.payload.commits[0].modified is search('test/rhde_config/apps/podman/',ignorecase=true)  or event.payload.commits[0].added is search('test/rhde_config/apps/podman/',ignorecase=true)"
      action:
        run_job_template:
          name: Podman Quadlet APPs Deploy
          organization: "{{ event.payload.repository.owner.login  }} Organization"
          job_args:
            extra_vars:
              git_repo_url: {% endraw %}"http://{{ gitea_ip | default(ansible_host) }}:{{ gitea_port | default('3000') }}/{% raw %}{{ event.payload.repository.owner.login | capitalize }}/rhde"
              git_user: "{{ event.payload.repository.owner.login | capitalize }}"
              path_prefix: "rhde_config"
              env: "test"
              path: "apps/podman/quadlet"



  execution_strategy: "parallel"
{% endraw %}
