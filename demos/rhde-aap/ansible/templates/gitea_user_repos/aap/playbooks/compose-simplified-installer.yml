---

- name: compose an image via Image Builder
  hosts:
    - all
  tasks:

    - name: Import Image definition variables from remote file
      block:

            - name: Create a tmp directory if it does not exist
              ansible.builtin.file:
                path: /tmp/{{ ansible_host }}/repos/{{ gitea_user_name }}{{ user_number }}"
                state: directory

            - name: Clone repo
              ansible.builtin.shell:
                cmd: "git clone http://{{ gitea_user_name }}{{ user_number }}:'{{ gitea_user_password }}{{ user_number }}'@{{ ansible_host }}:{{ gitea_port | default('3000') }}/{{ gitea_user_name }}{{ user_number }}/{% raw %}{{ images_repo }}{% endraw %}.git /tmp/{{ ansible_host }}/repos/{{ gitea_user_name }}{{ user_number }}/images"
                #chdir: "/tmp/{{ ansible_host }}/repos/{{ gitea_user_name }}{{ user_number }}"

            - name: Check if there is image definition file
              ansible.builtin.stat:
                path: "/tmp/{{ ansible_host }}/repos/user1/images/{% raw %}{{ files_path }}/{{ simplified_installer_definition_file }}{% endraw %}"
              register: vars_file_stat
              delegate_to: localhost

            - ansible.builtin.include_vars:
                file: "/tmp/{{ ansible_host }}/repos/{{ gitea_user_name }}{{ user_number }}/images/{% raw %}{{ files_path }}/{{ simplified_installer_definition_file }}{% endraw %}"
              when: vars_file_stat.stat.exists

            - name: Remove tmp directory
              ansible.builtin.file:
                path: "/tmp/{{ ansible_host }}/repo/{{ gitea_user_name }}{{ user_number }}"
                state: absent

      delegate_to: localhost

    - name: run the image builder role
      ansible.builtin.include_role:
        name: infra.osbuild.builder
      when: vars_file_stat.stat.exists


{% raw %}
    - name: Move ISO to right directory in HTTP server if simplified installer
      when: 
        - vars_file_stat.stat.exists
        - builder_compose_type == "edge-simplified-installer"
      become: true
      block:
        - name: Export the compose artifact
          infra.osbuild.get_all_finished_images:
          register: all_images

        - name: Get all image versions from blueprint {{ builder_blueprint_name }}-empty
          set_fact:
            all_image_versions_blueprint: "{{ all_images|json_query(blueprint_query) }}"
          vars:
            blueprint_query: "result.finished[?blueprint =='{{ builder_blueprint_name }}-empty'].version"

        - name: Get latest image versions from blueprint {{ builder_blueprint_name }}-empty
          set_fact:
            latest_image_version_blueprint: "{{ all_image_versions_blueprint | max}}"

        - ansible.builtin.debug:
            msg: "Latest image version for blueprint {{ builder_blueprint_name }}-empty is: {{ latest_image_version_blueprint }}"

        - name: Set version number
          set_fact:
            image_version: "{{ latest_image_version_blueprint }}"


        - name: Create {{ iso_dst_path | default('/var/www/html/{% endraw %}{{ gitea_user_name }}{{ user_number }}{% raw %}') }}/{{ image_environment }}{% endraw %}/isos directory if it does not exist
          ansible.builtin.file:
            path: "{% raw %}{{ iso_dst_path | default('/var/www/html/{% endraw %}{{ gitea_user_name }}{{ user_number }}{% raw %}') }}/{{ image_environment }}{% endraw %}/isos"
            state: directory

        - name: Copy the ISO
          ansible.builtin.copy:
            remote_src: true
            src: {% raw %}/var/www/html/{{ builder_blueprint_name }}/images/{{ image_version }}/{{ builder_blueprint_name }}_edge-simplified-installer.iso
            dest: "{{ iso_dst_path | default('/var/www/html/{% endraw %}{{ gitea_user_name }}{{ user_number }}{% raw %}') }}/{{ image_environment }}{% endraw %}/isos/{{ gitea_user_name }}{{ user_number }}{% raw %}-{{ image_environment }}-rhel-simplified-installer.iso"


        - name: Restore context on directory
          ansible.builtin.command: "restorecon -R {{ iso_dst_path | default('/var/www/html/{% endraw %}{{ gitea_user_name }}{{ user_number }}{% raw %}') }}/{{ image_environment }}{% endraw %}/isos/"
          changed_when: true


        - ansible.builtin.debug:
            msg: "Download the ISO from http://{{ ansible_host }}/{{ gitea_user_name }}{{ user_number }}/{% raw %}{{ image_environment }}{% endraw %}/isos/{{ gitea_user_name }}{{ user_number }}{% raw %}-{{ image_environment }}-rhel-simplified-installer.iso{% endraw %}"

{% raw %}
    - name: Remove dir generated by Image Builder
      become: true
      ansible.builtin.file:
        path: /var/www/html/{{ builder_blueprint_name }}
        state: absent
{% endraw %}