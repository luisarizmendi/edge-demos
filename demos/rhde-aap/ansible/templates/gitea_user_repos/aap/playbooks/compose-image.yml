---

- name: compose an image via Image Builder
  hosts:
    - all
  tasks:

    - name: Import Image definition variables from remote file
      block:

            - name: Create a tmp directory if it does not exist
              ansible.builtin.file:
                path: /tmp/{{ ansible_host }}/repos/{{ gitea_user_name }}{{ user_number }}"
                state: directory

            - name: Clone repo
              ansible.builtin.shell:
                cmd: "git clone http://{{ gitea_user_name }}{{ user_number }}:'{{ gitea_user_password }}{{ user_number }}'@{{ ansible_host }}:{{ gitea_port | default('3000') }}/{{ gitea_user_name }}{{ user_number }}/{% raw %}{{ images_repo }}{% endraw %}.git /tmp/{{ ansible_host }}/repos/{{ gitea_user_name }}{{ user_number }}/images"
                #chdir: "/tmp/{{ ansible_host }}/repos/{{ gitea_user_name }}{{ user_number }}"

            - name: Check if there is image definition file
              ansible.builtin.stat:
                path: "/tmp/192.168.122.2/repos/user1/images/{% raw %}{{ files_path }}/{{ image_definition_file }}{% endraw %}"
              register: vars_file_stat
              delegate_to: localhost

            - ansible.builtin.include_vars:
                file: "/tmp/{{ ansible_host }}/repos/{{ gitea_user_name }}{{ user_number }}/images/{% raw %}{{ files_path }}/{{ image_definition_file }}{% endraw %}"
              when: vars_file_stat.stat.exists

            - name: Remove tmp directory
              ansible.builtin.file:
                path: "/tmp/{{ ansible_host }}/repo/{{ gitea_user_name }}{{ user_number }}"
                state: absent

      delegate_to: localhost

    - name: run the image builder role
      ansible.builtin.include_role:
        name: infra.osbuild.builder
      when: vars_file_stat.stat.exists


{% raw %}
    - name: Remove dir generated by Image Builder
      become: true
      ansible.builtin.file:
        path: /var/www/html/{{ builder_blueprint_name }}
        state: absent
{% endraw %}