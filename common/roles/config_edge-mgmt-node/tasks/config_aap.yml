---

- name: Generate AAP config
  delegate_to: localhost
  template:
    src: "{{ aap_config_template }}"
    dest: /tmp/aap_config.yml

- name: Load variables
  ansible.builtin.include_vars: "/tmp/aap_config.yml"

## Cross Organization
- name: configure execution environments
  when: controller_execution_environments is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.execution_environments

- name: configure credential types
  when: controller_credential_types is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.credential_types

## Organization specific
- name: configure organizations
  when: controller_organizations_yaml is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.organizations
  vars:
    controller_organizations: "{{ controller_organizations_yaml|from_yaml }}"

- name: configure users
  when: controller_users_yaml is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.users
  vars:
    controller_user_accounts: "{{ controller_users_yaml|from_yaml }}"

- name: configure roles
  when: controller_roles_yaml is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.roles
  vars:
    controller_roles: "{{ controller_roles_yaml|from_yaml }}"

- name: configure inventories
  when: controller_inventories_yaml is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.inventories
  vars:
    controller_inventories: "{{ controller_inventories_yaml|from_yaml }}"

## User specific (needs to look over users)
- name: configure credentials
  when: controller_credentials is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.credentials
  vars:
    controller_username: "{{ gitea_user_name }}{{ user_number }}"
    controller_password: "{{ gitea_user_password }}{{ user_number }}"
    user_number: "{{ user_number }}"
  loop: "{{ range(1, (gitea_user_count + 1), 1)|list }}"
  loop_control:
    loop_var: user_number

- name: configure projects
  when: controller_projects is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.projects
  vars:
    controller_username: "{{ gitea_user_name }}{{ user_number }}"
    controller_password: "{{ gitea_user_password }}{{ user_number }}"
    user_number: "{{ user_number }}"
  loop: "{{ range(1, (gitea_user_count + 1), 1)|list }}"
  loop_control:
    loop_var: user_number

- name: configure hosts
  when: controller_hosts is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.hosts
  vars:
    controller_username: "{{ gitea_user_name }}{{ user_number }}"
    controller_password: "{{ gitea_user_password }}{{ user_number }}"
    user_number: "{{ user_number }}"
  loop: "{{ range(1, (gitea_user_count + 1), 1)|list }}"
  loop_control:
    loop_var: user_number

- name: configure job templates
  when: controller_templates is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.job_templates
  vars:
    controller_username: "{{ gitea_user_name }}{{ user_number }}"
    controller_password: "{{ gitea_user_password }}{{ user_number }}"
    user_number: "{{ user_number }}"
  loop: "{{ range(1, (gitea_user_count + 1), 1)|list }}"
  loop_control:
    loop_var: user_number

- name: configure workflows
  when: controller_workflows is defined
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.workflow_job_templates
  vars:
    controller_username: "{{ gitea_user_name }}{{ user_number }}"
    controller_password: "{{ gitea_user_password }}{{ user_number }}"
    user_number: "{{ user_number }}"
  loop: "{{ range(1, (gitea_user_count + 1), 1)|list }}"
  loop_control:
    loop_var: user_number

- name: configure notifications
  ansible.builtin.include_role:
    name: redhat_cop.controller_configuration.notification_templates
  vars:
    controller_username: "{{ gitea_user_name }}{{ user_number }}"
    controller_password: "{{ gitea_user_password }}{{ user_number }}"
    user_number: "{{ user_number }}"
  loop: "{{ range(1, (gitea_user_count + 1), 1)|list }}"
  loop_control:
    loop_var: user_number
  when: controller_notifications is defined




